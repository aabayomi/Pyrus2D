import matplotlib.pyplot as plt
import numpy as np

# Extract the duration data from the 4th column
durations = [
    35, 54, 39, 62, 68, 51, 54, 76, 212, 55, 72, 350, 58, 75, 87, 38, 66, 45, 79, 74,
    37, 35, 77, 56, 72, 47, 152, 45, 134, 72, 181, 58, 28, 96, 84, 32, 146, 61, 80, 96,
    51, 287, 136, 840, 45, 91, 59, 64, 142, 60, 84, 53, 56, 67, 219, 108, 50, 150, 99, 84,
    65, 81, 63, 61, 31, 76, 163, 46, 98, 66, 53, 58, 53, 41, 59, 93, 218, 71, 107, 62,
    45, 108, 99, 116, 102, 46, 77, 171, 79, 105, 139, 108, 280, 42, 62, 177, 58, 796, 31, 78,
    61, 74, 49, 45, 54, 35, 223, 89, 94, 114, 78, 211, 52, 100, 55, 43, 70, 157, 72, 125,
    49, 64, 66, 38, 74, 40, 52, 33, 53, 80, 51, 44, 41, 54, 49, 60, 72, 96, 48, 37,
    412, 70, 298, 83, 62, 97, 56, 155, 143, 137, 153, 112, 40, 76, 61, 74, 88, 86, 29, 77,
    47, 55, 84, 51, 41, 91, 70, 61, 108, 58, 135, 62, 73, 392, 68, 82, 77, 147, 35, 78,
    69, 69, 94, 180, 88, 52, 60, 64, 81, 76, 122, 158, 97, 49, 55, 97, 78, 63, 60, 47,
    71, 41, 43, 68, 65, 69, 53, 36, 239, 57, 43, 108, 181, 65, 68, 53, 67, 53, 135, 58,
    67, 52, 37, 50, 40, 52, 79, 100, 379, 34, 48, 85, 166, 113, 149, 90, 71, 55, 63, 112,
    73, 150, 196, 168, 138, 99, 42, 76, 67, 70, 76, 100, 65, 46, 62, 178, 35, 65, 69, 130,
    48, 68, 68, 84, 60, 40, 132, 67, 99, 37, 43, 71, 141, 1099, 54, 49, 42, 36, 52, 43,
    75, 96, 57, 79, 70, 43, 294, 56, 58, 127, 143, 41, 87, 115, 101, 72, 46, 108, 105, 67,
    44, 68, 118, 86, 46, 188, 42, 74, 47, 66, 108, 51, 74, 59, 36, 70, 87, 71, 64, 84,
    83, 133, 53, 104, 315, 197, 157, 181, 59, 28, 42, 45, 189, 91, 54, 37, 84, 52, 114, 45,
    33, 50, 76, 35, 106, 68, 45, 222, 52, 85, 95, 96, 95, 56, 113, 309, 35, 194, 86, 103,
    89, 170, 123, 84, 104, 82, 57, 81, 74, 383, 208, 36, 65, 60, 49, 51, 70, 160, 60, 468,
    55, 167, 53, 41, 776, 312, 567, 2043, 98, 467, 89, 1920, 38, 928, 128, 100, 105, 282, 459, 263,
    40, 43, 50, 65, 522, 74, 101, 53, 67, 346, 35, 250, 1259, 197, 47, 34, 469, 47, 946, 52,
    41, 166, 60, 120, 461, 289, 82, 294, 77, 694, 51, 53, 40, 70, 1089, 263, 371, 1597, 65, 511,
    60, 687, 262, 83, 585, 590, 149, 39, 56, 356, 87, 64, 31, 153, 102, 47, 798, 657, 41, 684,
    972, 353, 164, 48, 32, 80, 257, 84, 53, 66, 667, 611, 603, 32, 118, 261, 67, 91, 142, 1001,
    169, 35, 54, 74, 93, 1057, 63, 95, 1296, 249, 286, 42, 56, 170, 63, 65, 65, 1976, 38, 649,
    243, 154, 39, 543, 53, 42, 97, 581, 52, 745, 454, 556, 690, 511, 673, 30, 66, 1709, 81, 45,
    35, 2155, 1715, 45, 283, 33, 35, 172, 106, 697, 901, 209, 50, 371, 87, 46, 159, 2967, 75, 93,
    195, 75, 50, 185, 58, 67, 65, 553, 175, 102, 162, 333, 455, 296, 31, 54, 461, 55, 918, 32,
    25, 93, 656, 141, 643, 60, 46, 68, 336, 92, 692, 336, 872, 691, 977, 24, 41, 96, 65, 78,
    533, 89, 122, 44, 32, 48, 89, 787, 62, 457, 581, 130, 131, 109, 169, 67, 346, 94, 928, 54,
    45, 1045, 556, 88, 111, 291, 124, 62, 113, 85, 104, 165, 50, 394, 93, 85, 167, 869, 497, 78,
    469, 565, 1364, 35, 895, 71, 890, 241, 46, 1246, 398, 465, 38, 69, 259, 76, 95, 208, 37, 95,
    105, 52, 60, 67, 256, 712, 253, 56, 2351, 87, 44, 64, 461, 47, 451, 37, 58, 403, 854, 769,
    115, 97, 51, 530, 208, 59, 775, 272, 72, 564, 284, 556, 80, 480, 244, 402, 79, 283, 1177, 55,
    78, 83, 83, 56, 1433, 53, 430, 66, 454, 292, 31, 85, 468, 58, 70, 3007, 57, 1449, 370, 278,
    75, 91, 320, 2151, 1033, 44, 60, 49, 40, 40, 59, 72, 56, 1683, 35, 48, 181, 265, 598, 50,
    124, 501, 903, 29, 57, 49, 186, 460, 523, 79, 189, 109, 58, 57, 1251, 109, 35, 57, 910, 45,
    48, 1335, 86, 182, 55, 53, 105, 68, 47, 325, 1200, 331, 388, 99, 49, 249, 46, 63, 1201, 85,
    224
]

# Bin the episodes by 50 and calculate the average duration for each bin
bin_size = 50
num_bins = len(durations) // bin_size
episode_bins = np.arange(bin_size // 2, len(durations), bin_size)
duration_avgs = [np.mean(durations[i*bin_size:(i+1)*bin_size]) for i in range(num_bins)]

# Create a line graph
plt.figure(figsize=(10, 6))
plt.plot(episode_bins, duration_avgs, marker='o', markersize=5, linestyle='-', linewidth=2)
plt.xlabel('Episode')
plt.ylabel('Average Duration')
plt.title(f'Average Duration per {bin_size} Episodes')
plt.xticks(episode_bins)
plt.xlim(0, len(durations))
plt.grid(True)
plt.show()